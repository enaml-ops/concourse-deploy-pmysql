groups:
- name: all
  jobs:
  - populate-or-rotate-vault
  - get-product-version
  - deploy
  - broker-registrar
  - acceptance-tests
- name: deploy
  jobs:
  - populate-or-rotate-vault
  - get-product-version
  - deploy
- name: tests
  jobs:
  - acceptance-tests
- name: errands
  jobs:
  - broker-registrar
  - acceptance-tests

resources:
- name: daily
  type: time
  source: {interval: 24h}
- name: monthly
  type: time
  source: {interval: 720h}
- name: p-mysql
  type: pivnet
  check_every: 4h
  source:
    api_token: {{pivnet_api_token}}
    product_slug: p-mysql
    product_version: {{p-mysql-version}}
    product_version: {{pmysql-runtime-version}}
- name: concourse-deploy-p-mysql
  type: git
  check_every: 4h
  source:
    uri: https://github.com/enaml-ops/concourse-deploy-pmysql
    branch: master
- name: omg-cli
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: omg-cli

- name: omg-product-bundle
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: omg-product-bundle
- name: {{deployment-name}}
  type: bosh-deployment
  source:
    ca_cert: {{bosh-cacert}}
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}
    deployment: p-mysql
    target: {{bosh-url}}
- name: stemcells
  type: pivnet
  source:
    api_token: {{pivnet_api_token}}
    product_slug: stemcells
    product_version: {{stemcell-version}}

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

jobs:
- name: populate-or-rotate-vault
  plan:
    - aggregate:
      - get: monthly
        trigger: true
      - get: concourse-deploy-p-mysql
      - get: omg-cli
        version: &omg-cli-version
          tag: {{omg-cli-version}}
        params:
          globs:
          - omg-linux
      - get: omg-product-bundle
        version: &omg-product-bundle-version
          tag: {{omg-product-bundle-version}}
        params:
          globs:
          - p-mysql-plugin-linux
    - task: populate-or-rotate
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-p-mysql/ci/tasks/populate-or-rotate-vault.sh
        params:
          PRODUCT_PLUGIN: {{product_plugin}}
          STEMCELL_VERSION: {{stemcell-version}}
          VAULT_ADDR: {{vault_addr}}
          VAULT_HASH_ERT_PASSWORD: {{vault_hash_ert_password}}
          VAULT_HASH_IP: {{vault_hash_ip}}
          VAULT_HASH_MISC: {{vault_hash_misc}}
          VAULT_HASH_PASSWORD: {{vault_hash_password}}
          VAULT_TOKEN: {{vault_token}}
        inputs:
        - name: concourse-deploy-p-mysql
        - name: omg-cli
        - name: omg-product-bundle
        outputs:
- name: get-product-version
  plan:
    - aggregate:
      - get: concourse-deploy-p-mysql
      - get: omg-cli
        version: *omg-cli-version
        params:
          globs:
          - omg-linux
      - get: omg-product-bundle
        version: *omg-product-bundle-version
        trigger: true
        params:
          globs:
          - p-mysql-plugin-linux
        passed: [populate-or-rotate-vault]
    - task: get-product-version
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-p-mysql/ci/tasks/get-version-from-plugin.sh
        params:
          PRODUCT_PLUGIN: {{product_plugin}}
          OUTPUT_DIR: versions
        inputs:
        - name: concourse-deploy-p-mysql
        - name: omg-cli
        - name: omg-product-bundle
        outputs:
        - name: versions
          path: ""
    - task: update-pipeline
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-p-mysql/ci/tasks/update-pipeline.sh
        params:
          PIPELINE_NAME: deploy-mysql
          CONCOURSE_URL: {{concourse-url}}
          CONCOURSE_USER: {{concourse-user}}
          CONCOURSE_PASS: {{concourse-pass}}
        inputs:
        - name: concourse-deploy-p-mysql
        - name: versions
        outputs:
- name: deploy
  plan:
    - aggregate:
      - get: concourse-deploy-p-mysql
      - get: omg-cli
        passed: [get-product-version]
        params:
          globs:
          - omg-linux
      - get: omg-product-bundle
        version: *omg-product-bundle-version
        passed: [get-product-version]
        trigger: true
        params:
          globs:
          - p-mysql-plugin-linux
      - get: p-mysql
        params:
          globs:
          - p-mysql-*
      - get: stemcells
        trigger: true
        params:
          globs:
          - {{stemcell-cpi-glob}}
    - task: generate-manifest
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-p-mysql/ci/tasks/generate-p-mysql-manifest.sh
        params:
          BOSH_CLIENT: {{bosh-user}}
          BOSH_CLIENT_SECRET: {{bosh-pass}}
          BOSH_CACERT: {{bosh-cacert}}
          PRODUCT_PLUGIN: {{product_plugin}}
          STEMCELL_VERSION: {{stemcell-version}}
          VAULT_ADDR: {{vault_addr}}
          VAULT_HASH_ERT_IP: {{vault_hash_ert_ip}}
          VAULT_HASH_ERT_PASSWORD: {{vault_hash_ert_password}}
          VAULT_HASH_IP: {{vault_hash_ip}}
          VAULT_HASH_MISC: {{vault_hash_misc}}
          VAULT_HASH_PASSWORD: {{vault_hash_password}}
          VAULT_TOKEN: {{vault_token}}
          OUTPUT_DIR: manifest
        inputs:
        - name: concourse-deploy-p-mysql
        - name: omg-cli
        - name: omg-product-bundle
        outputs:
        - name: manifest
          path: ""
    - task: extract-tile
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-p-mysql/ci/tasks/extract-tile.sh
        params:
          PRODUCT_DIR: p-mysql
          OUTPUT_DIR: p-mysql-extracted
        inputs:
        - name: concourse-deploy-p-mysql
        - name: p-mysql
        outputs:
        - name: p-mysql-extracted
          path: ""
    - put: {{deployment-name}}
      params:
        manifest: manifest/deployment.yml
        stemcells:
        - stemcells/bosh-stemcell*.tgz
        releases:
        - p-mysql-extracted/releases/*.tgz
- name: broker-registrar
  plan:
    - get: concourse-deploy-p-mysql
    - get: {{deployment-name}}
      passed: [deploy]
      trigger: true
    - task: broker-registrar
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-p-mysql/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: p-mysql
          BOSH_ERRAND: broker-registrar
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-p-mysql
        outputs:
- name: acceptance-tests
  plan:
    - get: daily
      trigger: true
    - get: concourse-deploy-p-mysql
    - get: {{deployment-name}}
      passed: [broker-registrar]
      trigger: true
    - task: acceptance-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-p-mysql/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: p-mysql
          BOSH_ERRAND: acceptance-tests
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-p-mysql
        outputs:
